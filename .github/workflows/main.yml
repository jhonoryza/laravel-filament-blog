name: deploy

on:
  push:
    branches: [main]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    -
        name: Checkout
        uses: actions/checkout@v1
    -
        name: Dockerhub login
        env:
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
            echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
    -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
            buildx-version: latest
    -
        name: Build dockerfile (with push)
        run: |
            docker buildx build \
            --platform=linux/amd64 \
            --output "type=image,push=true" \
            --file ./production.Dockerfile . \
            --tag jhonoryza/filament-blog:latest

  # install-ansible:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.x'

  #   - name: Install Ansible
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install ansible

  deploy:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.x'

    # - name: Add SSH key
    #   uses: webfactory/ssh-agent@v0.5.4
    #   with:
    #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # - name: deploy
    #   run: |
    #     cd ansible
    #     ansible-playbook -i hosts production-ansible.yaml
    #   env:
    #     ANSIBLE_HOST_KEY_CHECKING: 'False'
    #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: deploy
      uses: Genesys225/cloudflared-service-token-ssh-proxy@V1
      with:
        HOST: 192.168.18.106
        USER: ubuntu
        PORT: 22
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        KEY_TYPE: id_rsa
        REMOTE_SHELL: 'bash'
        COMMAND: |
          docker pull jhonoryza/filament-blog:latest
          cd /media/ubuntu/server_data/docker/laravel-projects/laravel-filament-blog
          docker compose -f production.docker-compose.yaml up -d
          docker image prune -f
          docker builder prune --force
          docker exec app php artisan filament:cache-components
          docker exec app php artisan icons:cache